package net.nicoptere {	import net.nicoptere.Point2D;		/**	 * @author nicoptere	 */		public class Edge 	{			/// <summary>		/// Start of edge index		/// </summary>		public var p1:Point2D;		/// <summary>		/// End of edge index		/// </summary>		public var p2:Point2D;		/// <summary>		/// Initializes a new edge instance		/// </summary>		/// <param name="point1">Start edge vertex index</param>		/// <param name="point2">End edge vertex index</param>		public function Edge(point1:Point2D, point2:Point2D)		{			p1 = point1; 			p2 = point2;		}		/// <summary>		/// Initializes a new edge instance with start/end indexes of '0'		/// </summary>/*		public Edge()			: this(0, 0)		{		}*/		/// <summary>		/// Checks whether two edges are equal disregarding the direction of the edges		/// </summary>		/// <param name="other"></param>		/// <returns></returns>		public function equals(other:Edge):Boolean		{			return ((this.p1 == other.p2) && (this.p2 == other.p1)) || ((this.p1 == other.p1) && (this.p2 == other.p2));		}			}}